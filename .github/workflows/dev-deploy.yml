name: Build | Dev Deploy 

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
       - name: Create .env file
        run: |
          touch .env
          echo HOST = ${{ secrets.HOST }} >> .env
          echo PORT = ${{ secrets.PORT }} >> .env
          echo APP_KEYS = ${{ secrets.APP_KEYS }} >> .env
          echo API_TOKEN_SALT = ${{ secrets.API_TOKEN_SALT }} >> .env
          echo ADMIN_JWT_SECRET = ${{ secrets.ADMIN_JWT_SECRET }} >> .env
          echo TRANSFER_TOKEN_SALT = ${{ secrets.TRANSFER_TOKEN_SALT }} >> .env
          echo DATABASE_CLIENT = ${{ secrets.DATABASE_CLIENT }} >> .env
          echo DATABASE_HOST = ${{ secrets.DATABASE_HOST }} >> .env
          echo DATABASE_PORT = ${{ secrets.DATABASE_PORT }} >> .env
          echo DATABASE_NAME = ${{ secrets.DATABASE_NAME }} >> .env
          echo DATABASE_USERNAME = ${{ secrets.DATABASE_USERNAME }} >> .env
          echo DATABASE_PASSWORD = ${{ secrets.DATABASE_PASSWORD }} >> .env
          echo AWS_ACCESS_KEY_ID = ${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_ACCESS_SECRET = ${{ secrets.AWS_ACCESS_SECRET }} >> .env
          echo AWS_REGION = ${{ secrets.AWS_REGION }} >> .env
          echo AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }} >> .env
          echo JWT_SECRET: ${{ secrets.JWT_SECRET }} >> .env

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Strapi
        run: yarn build

  deploy_dev:
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Create .env file
        run: |
          touch .env
          echo HOST = ${{ secrets.HOST }} >> .env
          echo PORT = ${{ secrets.PORT }} >> .env
          echo APP_KEYS = ${{ secrets.APP_KEYS }} >> .env
          echo API_TOKEN_SALT = ${{ secrets.API_TOKEN_SALT }} >> .env
          echo ADMIN_JWT_SECRET = ${{ secrets.ADMIN_JWT_SECRET }} >> .env
          echo TRANSFER_TOKEN_SALT = ${{ secrets.TRANSFER_TOKEN_SALT }} >> .env
          echo DATABASE_CLIENT = ${{ secrets.DATABASE_CLIENT }} >> .env
          echo DATABASE_HOST = ${{ secrets.DATABASE_HOST }} >> .env
          echo DATABASE_PORT = ${{ secrets.DATABASE_PORT }} >> .env
          echo DATABASE_NAME = ${{ secrets.DATABASE_NAME }} >> .env
          echo DATABASE_USERNAME = ${{ secrets.DATABASE_USERNAME }} >> .env
          echo DATABASE_PASSWORD = ${{ secrets.DATABASE_PASSWORD }} >> .env
          echo AWS_ACCESS_KEY_ID = ${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_ACCESS_SECRET = ${{ secrets.AWS_ACCESS_SECRET }} >> .env
          echo AWS_REGION = ${{ secrets.AWS_REGION }} >> .env
          echo AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }} >> .env
          echo JWT_SECRET: ${{ secrets.JWT_SECRET }} >> .env

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Strapi
        run: yarn build

      - name: Start Strapi with PM2
        run: pm2 restart strapi

