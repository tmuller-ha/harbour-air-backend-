name: Build
env:
  HOST: ${{ secrets.HOST }}
  PORT: ${{ secrets.PORT }}
  APP_KEYS: ${{ secrets.APP_KEYS }}
  API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
  ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
  TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
  DATABASE_CLIENT: ${{ secrets.DATABASE_CLIENT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_ACCESS_SECRET: ${{ secrets.AWS_ACCESS_SECRET }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  STRAPI_ADMIN_GITHUB_TOKEN: ${{ secrets.STRAPI_ADMIN_GITHUB_TOKEN }}
  WEB_PREVIEW_URL: ${{ secrets.WEB_PREVIEW_URL }}
  DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
  DEFAULT_REPLY_TO_EMAIL: ${{ secrets.DEFAULT_REPLY_TO_EMAIL }}
  BLUESKY_BOOKING_SCHEDULES_API: ${{ secrets.BLUESKY_BOOKING_SCHEDULES_API }}
  BLUESKY_BOOKING_SCHEDULES_ID: ${{ secrets.BLUESKY_BOOKING_SCHEDULES_ID }}
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  IMAGE_HANDLER_URL: ${{ secrets.IMAGE_HANDLER_URL }}

on:
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Strapi Plugins
        run: |
          for plugin in src/plugin/*; do
            if [ -d "$plugin" ]; then
              echo "Building plugin: $(basename $plugin)"
              cd "$plugin"
              yarn install
              yarn build
              cd - || exit
            fi
          done

      - name: Build Strapi
        run: yarn build
